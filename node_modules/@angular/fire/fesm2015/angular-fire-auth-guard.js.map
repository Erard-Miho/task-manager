{"version":3,"file":"angular-fire-auth-guard.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}